So far all the programs we've been writing have been inside main().

A function is a black box with 0+ inputs and 1 ouptut.
func(a, b, c) has three inputs, and one output.

Why do we call it a black box? If we aren't writing the functions ourselves, we don't need to know how it is implemented under the hood.

Why do we use functions?
Organization, Simplification, Reusability
Smaller components tend to be easier to design, implement, and debug. Plus, functions can be reused/recycled across different programs.


Function Declarations
The first step to creating a function is to declare it. This gives the compiler a heads-up that a user-written function appears in the code.

All function declarations pretty much look like this:

return-type name(argument list);
The return-type is what kind of variable the function will output (like int).
The name is what you want to call your function. It is important to pick an appropriate name that clearly gives an idea what the function does.
The argument-list is the comma-separated set of inputs to your function, each of which has a type and a name.

int add_two_ints(int a, int b);
The sum of two integers is going to be an integer as well.

Example of a function that mutliplies two floating point numbers.
float mult_two_floats(float x, float y);

